class(1)
class('1')
　
first <- 1
first
'first
"second"
#R도 변수를 잡아서 사용가능
class(1)
class('1')
　
first <- 1
first
'first
"second"
#R도 변수를 잡아서 사용가능
class(1)
class('1')
　
first <- 1
first
'first
"second"
#R도 변수를 잡아서 사용가능
class(1)
class('1')
　
first <- 1
first
'first
"second"
#R도 변수를 잡아서 사용가능
class(1)
class('1')
　
first <- 1
first
'first
"second"
#R도 변수를 잡아서 사용가능
class(1)
class('1')
　
first <- 1
first
'first
"second"
#R도 변수를 잡아서 사용가능
class(1)
class('1')
　
first <- 1
first
'first
"second"
#R도 변수를 잡아서 사용가능
class(1)
class('1')
　
first <- 1
first
'first
"second"
#R도 변수를 잡아서 사용가능
class(1)
class('1')
　
first <- 1
first
'first
"second"
#R도 변수를 잡아서 사용가능
first <- 1
first
class(1)
class('1')
'first
"second"
#R도 변수를 잡아서 사용가능
first <- 1
first
class(1)
class('1')
'first
"second"
#R도 변수를 잡아서 사용가능
first <- 1
first
class(1)
class('1')
'first
"second"
#R도 변수를 잡아서 사용가능
first <- 1
first
class(1)
class('1')
'first
"second"
#R도 변수를 잡아서 사용가능
first <- 1
first
class(1)
'first
"second"
#R도 변수를 잡아서 사용가능
first <- 1
first
class(1)
'first
"second"
#R도 변수를 잡아서 사용가능
first <- 1
first
class(1)
class('1')
'first
"second"
#R도 변수를 잡아서 사용가능
first <- 1
first
class(1)
class('1')
'first
"second"
#R도 변수를 잡아서 사용가능
first <- 1
first
class(1)
class('1')
'first
"second"
#R도 변수를 잡아서 사용가능
first <- 1
first
class(1)
class('1')
'first
"second"
#R도 변수를 잡아서 사용가능
first <- 1
first
class(1)
class('1')
cat(1,NA,2)
'first
"second"
#R도 변수를 잡아서 사용가능
first <- 1
first
class(1)
class('1')
cat(1,NA,2)
cat(1,NULL,2)
'first
"second"
#R도 변수를 잡아서 사용가능
first <- 1
first
class(1)
class('1')
cat(1,NA,2)
cat(1,NULL,2)
sum(1,NA,2)
sum(1,NULL,2)
sum(1, NA, 2, na.rm = T)
setwd('D:\workspace\R_Data_Analysis\part3\data')
txt1 <- read.csv('factor_test')
txt1
setwd('D:\workspace\R_Data_Analysis\part3\data')
setwd('d:\workspace\R_Data_Analysis\part3\data')
setwd("d:\workspace\R_Data_Analysis\part3\data")
setwd("d:/workspace/R_Data_Analysis/part3/data")
txt1 <- read.csv('factor_test')
setwd("d:/workspace/R_Data_Analysis/part3/data")
setwd("d:/workspace/R_Data_Analysis/part3/data")
txt1 <- read.csv('factor_test')
setwd("d:/workspace/R_Data_Analysis/part3/data")
setwd("d:/workspace/R_Data_Analysis/part3/data")
txt1 <- read.csv('factor_test')
setwd("d:/workspace/R_Data_Analysis/part3/data")
txt1 <- read.csv('factor_test')
txt1 <- read.csv('factor_test.txt')
txt1 <- read.csv('factor_test.txt')
setwd("d:/workspace/R_Data_Analysis/part3/data")
TXTdata <- read.table("factor_test.txt", header = TRUE)
setwd("d:/workspace/R_Data_Analysis/part3/data")
txt1 <- read.csv('factor_test')
setwd("d:/workspace/R_Data_Analysis/part3/data")
install.packages('ggplot2')
library(ggplot2)
mpg
view(mpg)
#배기량 4이하인 애 하나, 5이상인애 하나로 코드 짜기
mpg4 <- filter(mpg, displ < 4)
mpg5 <- filter(mpg, displ > 5)
mean(mpg4<hwy,mpg5<hwy)
mean(mpg4$hwy);mean(mpg5$hwy)
mean(mpg4$hwy);mean(mpg5$hwy)
#배기량 4이하인 애 하나, 5이상인애 하나로 코드 짜기
mpg4 <- filter(mpg, displ < 4)
mpg5 <- filter(mpg, displ > 5)
mean(mpg4$hwy);mean(mpg5$hwy)
#배기량 4이하인 애 하나, 5이상인애 하나로 코드 짜기
mpg4 <- filter(mpg, displ <= 4)
mpg5 <- filter(mpg, displ >= 5)
mean(mpg4$hwy);mean(mpg5$hwy)
mpg_a <- filter(mpg, manufacturer = 'audi')
mean(mpg4$hwy);mean(mpg5$hwy)
mpg_t <- filter(mpg, manufacturer = 'toyota')
view(mpg)
install.packages('ggplot2')
mpg
view(mpg)
install.packages("ggplot2")
mpg
view(mpg)
View(mpg)
mpg
View(mpg)
library(ggplot2)
mpg
View(mpg)
#옆으로 길면 힘들고, wide는 분석할때
#DF로 상관관계 분석, 그래프 그리려 할때는 long으로 필요하다
install.packages('reshape2')
librart('reshape2')
fruits
librart('reshape2')
library('reshape2')
fruits
#옆으로 길면 힘들고, wide는 분석할때
#DF로 상관관계 분석, 그래프 그리려 할때는 long으로 필요하다
install.packages('reshape2')
library('reshape2')
fruits
install.packages("reshape2")
install.packages("reshape2")
library(reshape2)
fruits
fruits
fruits
fruits
fruits
write.csv(fruits)
fruits
melt(fruits,id = 'year')
melt(fruits, id =c('year','name'))
attach(Fruits)
#옆으로 길면 힘들고, wide는 분석할때
#DF로 상관관계 분석, 그래프 그리려 할때는 long으로 필요하다
install.packages('googleVis')
inbrary(googleVis)
attach(Fruits)
attach(Fruits)
install.packages('reshape2')
attach(Fruits)
inbrary(googleVis)
library(reshape2)
fruits
melt(fruits,id = 'year')
melt(fruits, id =c('year','name'))
library(ggplot2)
mpg
View(mpg)
#1
mpg4 <- filter(mpg, displ <= 4)
mpg5 <- filter(mpg, displ >= 5)
#1
mpg4 <- filter(mpg, displ <= 4)
mpg5 <- filter(mpg, displ >= 5)
mean(mpg4$hwy); mean(mpg5$hwy)
#2
mpg_a <- filter(mpg, manufacturer=='audi')
mpg_t <- filter(mpg, manufacturer=='toyota')
mean(mpg_a$cty); mean(mpg_t$cty)
mpg %>%
filter(manufacturer %in% c('audi', 'toyota')) %>%
group_by(manufacturer) %>%
summarise(average = mean(cty))
#3
mpg %>%
filter(manufacturer %in% c('chevrolet', 'ford', 'honda')) %>%
summarise(average = mean(hwy))
#4
mpg_4 <- select(mpg, class, cty)
head(mpg_4); tail(mpg_4)
#5
mpg_4 %>%
filter(class %in% c('suv', 'compact')) %>%
group_by(class) %>%
summarise(average = mean(cty))
#6
mpg %>%
filter(manufacturer == 'audi') %>%
select(manufacturer, model, hwy) %>%
arrange(desc(hwy)) %>%
head(5)
#7-1
mpg_new <- mpg %>%
mutate(cty_hwy = cty + hwy)
#7-2
mpg_new <- mpg_new %>%
mutate(ch_avg = cty_hwy /2)
#7-3
mpg_new %>%
arrange(desc(ch_avg)) %>%
head(3)
#7-4
mpg %>%
select(-displ:-drv) %>%
mutate(cty_hwy = cty + hwy, ch_avg = cty_hwy/2) %>%
arrange(desc(ch_avg)) %>%
head(3)
#8
mpg %>%
group_by(class) %>%
summarise(average = mean(cty))
mpg4 <- filter(mpg, displ <= 4)
mpg5 <- filter(mpg, displ >= 5)
mean(mpg4$hwy); mean(mpg5$hwy)
mpg_a <- filter(mpg, manufacturer=='audi')
mpg_t <- filter(mpg, manufacturer=='toyota')
mean(mpg_a$cty); mean(mpg_t$cty)
install.packages("stringr")
install.packages("stringr")
fruits <- c('apple','Apple','banana','pineapple')
str_detect(fruits, 'A')
str_detect(fruits, 'A')
fruits <- c('apple','Apple','banana','pineapple')
str_detect(fruits, 'A')
library(ggplot2)
mpg
View(mpg)
#1
mpg4 <- filter(mpg, displ <= 4)
#1
mpg4 <- filter(mpg, displ <= 4)
mpg5 <- filter(mpg, displ >= 5)
mean(mpg4$hwy); mean(mpg5$hwy)
librart(stringr)
fruits <- c('apple','Apple','banana','pineapple')
str_detect(fruits, 'A')
install.packages("ggplot2")
install.packages("ggplot2")
library(ggplot2)
mpg
View(mpg)
#1
mpg4 <- filter(mpg, displ <= 4)
install.packages("ggplot2")
library(ggplot2)
mpg
View(mpg)
#1
mpg4 <- filter(mpg, displ <= 4)
install.packages("stringr")
librart(stringr)
fruits <- c('apple','Apple','banana','pineapple')
str_detect(fruits, 'A')
fruits <- c('apple','Apple','banana','pineapple')
str_detect(fruits, 'A')
install.packages("ggplot2")
library(ggplot2)
mpg
#1
mpg4 <- filter(mpg, displ <= 4)
#2
mpg_a <- filter(mpg, manufacturer=='audi')
mpg_t <- filter(mpg, manufacturer=='toyota')
mean(mpg_a$cty); mean(mpg_t$cty)
#2
mpg_a <- filter(mpg, manufacturer=='audi')
Data %>%
filter_all(any_vars(is.na(.)))
Data %>%
filter_all(any_vars(is.na(.)))
mpg4 <- filter(mpg, displ <= 4)
#옆으로 길면 힘들고, wide는 분석할때
#DF로 상관관계 분석, 그래프 그리려 할때는 long으로 필요하다
install.packages('googleVis')
inbrary(googleVis)
attach(Fruits)
install.packages('reshape2')
library(reshape2)
fruits
melt(fruits,id = 'year')
melt(fruits, id =c('year','name'))
install.packages("stringr")
install.packages("stringr")
librart(stringr)
fruits <- c('apple','Apple','banana','pineapple')
str_detect(fruits, 'A')
str_detect(fruits,'^a')
library(stringr)
fruits <- c('apple','Apple','banana','pineapple')
str_detect(fruits, 'A')
str_detect(fruits,'^a')
str_detect(fruits,'e$')
str_detect(fruits,'^[aA]')
str_detect(fruits,'[aA]')
str_detect(fruits,ignore_case('a'))
str_detect(fruits,ignore.case('a'))
str_detect(fruits,regex('a',ingnotr_case = T))
str_count(fruits,'a')
str_c('apple','banana')
str_c('Fruits:',fruits)
str_c(fruits,"name is", fruits)
str_c(fruits,collapse = "")
str_c(fruits,collapse = '-')
str_dup(fruits,3)
str_length('apple')
str_length(fruits)
str_length('과일일')
str_length('과일')
str_locate('apple','a')
mpg4 <- filter(mpg, displ <= 4)
mpg5 <- filter(mpg, displ >= 5)
mpg
library(ggplot2)
mpg
mpg4 <- filter(mpg, displ <= 4)
Data %>%
filter_all(any_vars(is.na(.)))
Data %>%
filter_all(any_vars(is.na(.)))
mpg4 <- filter(mpg, displ <= 4)
mpg %>%
filter_all(any_vars(is.na(.)))
mpg4 <- filter(mpg, displ <= 4)
mpg5 <- filter(mpg, displ >= 5)
mpg4 <- filter(mpg, displ <= 4)
str_locate('apple','ap')
str_locate(fruits,'ap')
str_replace('apple','p','*')
str_replace('apple','p','**')
str_replace_all('apple','*')
str_replace_all('apple','apple','*')
str_replace_all('apple','appl','*')
str_split()
str_sub(fruits,start=1,end=3)
str_sub(fruits,start=6,end=9)
fruits <- str_c('apple','/','orange','/','banana')
fruits
str_split(fruits,'/')
str_sub(fruits,start=-5)
str_trim('apple banana berry')
str_sub(fruits,start=7)
str_sub(fruits,end=7)
str_trim(' \t apple banana berry')
#값자체가 안나오...아앙..
install.packages("ggplot2")
install.packages("ggplot2")
library(ggplot2)
mpg
#1
mpg4 <- filter(mpg, displ <= 4)
#7-1
mpg_new <- mpg %>%
mutate(cty_hwy = cty + hwy)
#6
mpg %>%
filter(manufacturer == 'audi') %>%
select(manufacturer, model, hwy) %>%
arrange(desc(hwy)) %>%
head(5)
#7-1
mpg_new <- mpg %>%
mutate(cty_hwy = cty + hwy)
mpg
#1
mpg4 <- filter(mpg, displ <= 4)
library(dprly)
library(dplyr)
install.packages("dplyr")
library(dplyr)
mpg
#1
mpg4 <- filter(mpg, displ <= 4)
mpg5 <- filter(mpg, displ >= 5)
mean(mpg4$hwy); mean(mpg5$hwy)
mpg5 <- filter(mpg, displ >= 5)
mean(mpg4$hwy); mean(mpg5$hwy)
#2
mpg_a <- filter(mpg, manufacturer=='audi')
mpg_t <- filter(mpg, manufacturer=='toyota')
mean(mpg_a$cty); mean(mpg_t$cty)
install.packages('dplyr')
data1 <- read.csv('2013년_프로야구선수_성적.csv')
library(dplyr)
data1 <- read.csv('2013년_프로야구선수_성적.csv')
data1 <- read.csv('2013년_프로야구선수_성적.csv')
data1 <- read.csv('2013년_프로야구선수_성적.csv')
install.packages('plyr')
library(plyr)
fruits <- read.csv("fruits_10.csv", header = T)
fruits
ddply(fruits,'name',summarise,sum_qty=sum(qty),sum_price=sum(price))
ddply(fruits,'name',summarise,sum_qty=max(qty),sum_price=min(price))
ddply(fruits,c('year','name'),summarise,max_qty=max(qty),max_price=min(price))#원하는 column의 이름의 다를때
ddply(fruits,'name',transform,sum_qty=sum(qty),pct_qty=(100*qty)/sum(qty))
install.packages("plyr")
install.packages('dplyr')
install.packages("plyr")
data1 <- read.csv('2013년_프로야구선수_성적.csv')
##P.403~413 다시 공부해보고 연습문제도 풀기
stewd('')
##P.403~413 다시 공부해보고 연습문제도 풀기
getwd()
##P.403~413 다시 공부해보고 연습문제도 풀기
getwd()
data1 <- read.csv('2013년_프로야구선수_성적.csv')
