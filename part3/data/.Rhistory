filter_all(any_vars(is.na(.)))
Data %>%
filter_all(any_vars(is.na(.)))
mpg4 <- filter(mpg, displ <= 4)
mpg %>%
filter_all(any_vars(is.na(.)))
mpg4 <- filter(mpg, displ <= 4)
mpg5 <- filter(mpg, displ >= 5)
mpg4 <- filter(mpg, displ <= 4)
str_locate('apple','ap')
str_locate(fruits,'ap')
str_replace('apple','p','*')
str_replace('apple','p','**')
str_replace_all('apple','*')
str_replace_all('apple','apple','*')
str_replace_all('apple','appl','*')
str_split()
str_sub(fruits,start=1,end=3)
str_sub(fruits,start=6,end=9)
fruits <- str_c('apple','/','orange','/','banana')
fruits
str_split(fruits,'/')
str_sub(fruits,start=-5)
str_trim('apple banana berry')
str_sub(fruits,start=7)
str_sub(fruits,end=7)
str_trim(' \t apple banana berry')
#값자체가 안나오...아앙..
install.packages("ggplot2")
install.packages("ggplot2")
library(ggplot2)
mpg
#1
mpg4 <- filter(mpg, displ <= 4)
#7-1
mpg_new <- mpg %>%
mutate(cty_hwy = cty + hwy)
#6
mpg %>%
filter(manufacturer == 'audi') %>%
select(manufacturer, model, hwy) %>%
arrange(desc(hwy)) %>%
head(5)
#7-1
mpg_new <- mpg %>%
mutate(cty_hwy = cty + hwy)
mpg
#1
mpg4 <- filter(mpg, displ <= 4)
library(dprly)
library(dplyr)
install.packages("dplyr")
library(dplyr)
mpg
#1
mpg4 <- filter(mpg, displ <= 4)
mpg5 <- filter(mpg, displ >= 5)
mean(mpg4$hwy); mean(mpg5$hwy)
mpg5 <- filter(mpg, displ >= 5)
mean(mpg4$hwy); mean(mpg5$hwy)
#2
mpg_a <- filter(mpg, manufacturer=='audi')
mpg_t <- filter(mpg, manufacturer=='toyota')
mean(mpg_a$cty); mean(mpg_t$cty)
install.packages('dplyr')
data1 <- read.csv('2013년_프로야구선수_성적.csv')
library(dplyr)
data1 <- read.csv('2013년_프로야구선수_성적.csv')
data1 <- read.csv('2013년_프로야구선수_성적.csv')
data1 <- read.csv('2013년_프로야구선수_성적.csv')
install.packages('plyr')
library(plyr)
fruits <- read.csv("fruits_10.csv", header = T)
fruits
ddply(fruits,'name',summarise,sum_qty=sum(qty),sum_price=sum(price))
ddply(fruits,'name',summarise,sum_qty=max(qty),sum_price=min(price))
ddply(fruits,c('year','name'),summarise,max_qty=max(qty),max_price=min(price))#원하는 column의 이름의 다를때
ddply(fruits,'name',transform,sum_qty=sum(qty),pct_qty=(100*qty)/sum(qty))
install.packages("plyr")
install.packages('dplyr')
install.packages("plyr")
data1 <- read.csv('2013년_프로야구선수_성적.csv')
##P.403~413 다시 공부해보고 연습문제도 풀기
stewd('')
##P.403~413 다시 공부해보고 연습문제도 풀기
getwd()
##P.403~413 다시 공부해보고 연습문제도 풀기
getwd()
data1 <- read.csv('2013년_프로야구선수_성적.csv')
library(plyr)
fruits <- read.csv("fruits_10.csv", header = T)
##P.403~413 다시 공부해보고 연습문제도 풀기
getwd()
fruits <- read.csv("fruits_10.csv", header = T)
library(plyr)
fruits <- read.csv("fruits_10.csv", header = T)
fruits
ddply(fruits,'name',summarise,sum_qty=sum(qty),sum_price=sum(price))
##P.403~413 다시 공부해보고 연습문제도 풀기
getwd()
library(plyr)
fruits <- read.csv("fruits_10.csv", header = T)
library(plyr)
fruits <- read.csv("fruits_10.csv", header = T)
fruits
ddply(fruits,'name',summarise,sum_qty=sum(qty),sum_price=sum(price))
library(plyr)
fruits <- read.csv("fruits_10.csv", header = T)
library(plyr)
fruits <- read.csv("fruits_10.csv", header = T)
library(googleVis)
attach(Fruits)
Fruits
Fruits1 <- filter(Fruits,Expenses>80) #1번
Fruits1
Fruits1 <- filter(Fruits,Expenses>80) #1번
Fruits1
Fruits1 <- filter(Fruits,Expenses>80) #1번
Fruits1 <- filter(Fruits,Expenses>80) ;Fruits1
library(ggplot2)
library(dplyr)
mpg
View(mpg)
#1
mpg4 <- filter(mpg, displ <= 4)
mpg5 <- filter(mpg, displ >= 5)
mean(mpg4$hwy); mean(mpg5$hwy)
#4
mpg_4 <- select(mpg, class, cty)
head(mpg_4); tail(mpg_4)
library(dplyr)
Fruits
Fruits1 <- filter(Fruits,Expenses>80) ;Fruits1
f1<- filter(Fruits,Expenses>80) ;f1
Fruits2 %>%
filter(Expenses>90) %>%
arrange(Sales)#2번
Fruits2 %>%
filter(Expenses>90) %>%
arrange(Sales)#2번
#########답
Fruits %>%
group_by(Fruits) %>%
mutate(sumSales = sum(Sales))
#########답
Fruits %>%
group_by(Fruit) %>%
mutate(sumSales = sum(Sales))
library(ggplot2)
library(dplyr)
mpg
#1
mpg4 <- filter(mpg, displ <= 4)
mpg5 <- filter(mpg, displ >= 5)
mean(mpg4$hwy); mean(mpg5$hwy)
library(ggplot2)
library(dplyr)
mpg
mpg %>%
filter(manufacturer %in% c('audi', 'toyota')) %>%
group_by(manufacturer) %>%
summarise(average = mean(cty)) #많이 사용함,
mpg %>%
filter(manufacturer %in% c('audi', 'toyota')) %>%
group_by(manufacturer) %>%
summarise(고속도로연비평균 = mean(cty)) #많이 사용함,
mpg
View(mpg)
#각각의 시내도로 연비평균
mpg %>%
gruop_by(manufacturer)%>%
summarise_each(funs(mean),chevrolet, ford, honda)
#각각의 시내도로 연비평균
mpg %>%
gruop_by(manufacturer)%>%
summarise_each(funs(mean),chevrolet, ford, honda)
#각각의 시내도로 연비평균
mpg %>%
gruop_by(mpg,manufacturer)%>%
summarise_each(funs(mean),chevrolet, ford, honda)
#각각의 시내도로 연비평균
mpg %>%
gruop_by(mpg,manufacturer)%>%
summarise_each(funs(mean),chevrolet, ford, honda)
#각각의 시내도로 연비평균
mpg %>%
gruop_by(cty)%>%
summarise_each(funs(mean),chevrolet, ford, honda)
#각각의 시내도로 연비평균
mpg %>%
gruop_by(cty)%>%
summarise_each(funs(mean),c('chevrolet', 'ford', 'honda'))
#각각의 시내도로 연비평균
mpg %>%
gruop_by(manufacturer)%>%
summarise_each(funs(mean),c('chevrolet', 'ford', 'honda'))
#각각의 시내도로 연비평균
mpg %>%
gruop_by(chevrolet, ford, honda)%>%
summarise_each(funs(mean),cty)
2. class에 따른 평균속도 -#sort 내림차순으로 다섯개만(head())
mc %>%
summarise(class별평균속도 = mean(clss))
2. class에 따른 평균속도 -#sort 내림차순으로 다섯개만(head())
mc %>%
summarise(class별평균속도 = mean(clss))
2. class에 따른 평균속도 -#sort 내림차순으로 다섯개만(head())
mpg %>%
summarise(class별평균속도 = mean(clss))
2. class에 따른 평균속도 -#sort 내림차순으로 다섯개만(head())
mpg %>%
summarise(class별평균속도 = mean(clsss))
2. class에 따른 평균속도 -#sort 내림차순으로 다섯개만(head())
mpg %>%
summarise(class별평균속도 = mean(class))
2. class에 따른 평균속도 -#sort 내림차순으로 다섯개만(head())
mpg %>%
summarise(class별평균속도 = mean(cyl))
2. class에 따른 평균속도 -#sort 내림차순으로 다섯개만(head())
mpg %>%
filter(mpg) %>%
summarise(class별평균속도 = mean(cyl))
2. class에 따른 평균속도 -#sort 내림차순으로 다섯개만(head())
mpg %>%
filter(mpg) %>%
summarise(class별평균속도 = mean(cyl))
2. class에 따른 평균속도 -#sort 내림차순으로 다섯개만(head())
mpg %>%
filter(mpg,class) %>%
summarise(class별평균속도 = mean(cyl))
filter(mpg,mean(class) %>%
3. cyl에 따른 평균속도를 내림차순으로
mpg %>%
mpg %>%
filter(mpg,mean(class)
mc
mc %>%
mc
mpg <- filter(mpg,mean(class)
mpg
#2. class에 따른 평균속도 -#sort 내림차순으로 다섯개만(head())
mpg <- filter(mpg,mean(class)
#2. class에 따른 평균속도 -#sort 내림차순으로 다섯개만(head())
mpg <- filter(mpg,mean(class))
#2. class에 따른 평균속도 -#sort 내림차순으로 다섯개만(head())
mpg <- filter(mpg,mean(class))
mpg
#2. class에 따른 평균속도 -#sort 내림차순으로 다섯개만(head())
mc%>%
select(manufacturer)%>%
filter(mpg,mean(class))
#2. class에 따른 평균속도 -#sort 내림차순으로 다섯개만(head())
mpg%>%
select(manufacturer)%>%
filter(mpg,mean(class))
#2. class에 따른 평균속도 -#sort 내림차순으로 다섯개만(head())
mpg%>%
select(manufacturer)%>%
filter(mean(class))
#2. class에 따른 평균속도 -#sort 내림차순으로 다섯개만(head())
mpg%>%
select(manufacturer)%>%
filter(mean(class))
#2. class에 따른 평균속도 -#sort 내림차순으로 다섯개만(head())
mpg%>%
filter(class)%>%
#2. class에 따른 평균속도 -#sort 내림차순으로 다섯개만(head())
mpg%>%
filter(class)%>%
mpg
#2. class에 따른 평균속도 -#sort 내림차순으로 다섯개만(head())
mpg%>%
filter(class); mpg
#2. class에 따른 평균속도 -#sort 내림차순으로 다섯개만(head())
mpg <-  filter(mpg,class); mpg
#2. class에 따른 평균속도 -#sort 내림차순으로 다섯개만(head())
mc <-  filter(mpg,class); mc
#2. class에 따른 평균속도 -#sort 내림차순으로 다섯개만(head())
mc %>%
select(class)%>%
filter(cty); mc
#2. class에 따른 평균속도 -#sort 내림차순으로 다섯개만(head())
mpg %>%
select(class)%>%
filter(cty)
#2. class에 따른 평균속도 -#sort 내림차순으로 다섯개만(head())
mpg %>%
group_by(class)%>%
summarise(클래스의 평균 = mean(class,na.rm = TRUE))
#2. class에 따른 평균속도 -#sort 내림차순으로 다섯개만(head())
mpg %>%
group_by(class)%>%
summarise(클래스의 평균 = mean(class,na.rm = TRUE))
mpg
#2. class에 따른 평균속도 -#sort 내림차순으로 다섯개만(head())
mpg %>%
group_by(class)%>%
select(class)
#2. class에 따른 평균속도 -#sort 내림차순으로 다섯개만(head())
mpg %>%
mutate(평균속도 = (cty+hwy)/2)%>%
group_by(class)%>%
summarise(클래스의 평균 = mean(class,na.rm = TRUE))
#2. class에 따른 평균속도 -#sort 내림차순으로 다섯개만(head())
mpg %>%
mutate(평균속도 = (cty+hwy)/2)%>%
group_by(class)%>%
summarise(클래스의 평균 = mean(평균속도도,na.rm = TRUE))
#2. class에 따른 평균속도 -#sort 내림차순으로 다섯개만(head())
mpg %>%
mutate(평균속도 = (cty+hwy)/2)%>%
group_by(class)%>%
summarise(클래스의 평균 = mean(평균속도,na.rm = TRUE))
#2. class에 따른 평균속도 -#sort 내림차순으로 다섯개만(head())
mpg %>%
mutate(평균속도 = (cty+hwy)/2)%>%
group_by(class)%>%
summarise(클래스의 평균 = mean(평균속도,na.rm = TRUE))%>%
arrange(desc(클래스의 평균))
mpg
#2. class에 따른 평균속도 -#sort 내림차순으로 다섯개만(head())
mpg %>%
mutate(avg_spd = (cty+hwy)/2)%>%
group_by(class)%>%
summarise(클래스의 평균 = mean(avg_spd))%>%
arrange(desc(클래스의 평균))
#2. class에 따른 평균속도 -#sort 내림차순으로 다섯개만(head())
mpg %>%
mutate(avg_spd = (cty+hwy)/2)%>%
group_by(class)%>%
summarise(클래스의평균 = mean(avg_spd))%>%
arrange(desc(클래스의평균))
#2. class에 따른 평균속도 -#sort 내림차순으로 다섯개만(head())
mpg %>%
mutate(avg_spd = (cty+hwy)/2)%>%
group_by(class)%>%
summarise(클래스의평균 = mean(avg_spd))%>%
arrange(desc(클래스의평균))%>%
head()
#2. class에 따른 평균속도 -#sort 내림차순으로 다섯개만(head())
mpg %>%
mutate(avg_spd = (cty+hwy)/2)%>%
group_by(class)%>%
summarise(클래스의평균 = mean(avg_spd))%>%
arrange(desc(클래스의평균))%>%
head(5)
mtcars
mtcars%>%
mutate(md = (mpg / disp))%>%
arrange(desc(md)) %>%
head(5)
mtcars%>%
mutate(mut = (cyl/hp))%>%
tilter(mean(cyl))%>%
mtcars%>%
mutate(mut = (cyl/hp))%>%
tilter(mean(cyl))%>%
head(5)
mtcars%>%
mutate(mut = (cyl/hp))%>%
tilter(mtcars,mean(cyl))%>%
head(5)
mtcars%>%
mutate(mut = (cyl/hp))%>%
arrange(desc(mut))%>%
head(5)
mutate(mut = (mean= c(cyl,hp))%>%
mtcars%>%
mutate(mut = (mean= c(cyl,hp)))%>%
arrange(desc(mut))%>%
head(5)
mtcars%>%
summarise(funs(mean),hp)
mtcars%>%
group_by(cyl)%>%
summarise(funs(mean),hp)
mtcars%>%
group_by(cyl)%>%
summarise(funs(mean),hp)%>%
head(5)
mtcars%>%
group_by(cyl)%>%
summarise(funs(mean),hp)%>%
head(5)
mtcars%>%
group_by(cyl)%>%
summarise(funs(mean))%>%
head(5)
mtcars%>%
group_by(cyl)%>%
summarise_each(mean)%>%
head(5)
mtcars%>%
group_by(cyl)%>%
summarise_each(mean)%>%
head(7)
mtcars%>%
group_by(cyl)%>%
summarise(avg_hp = mean(hp))%>%
arrange(desc(avg_hp))
head(5)
mtcars%>%
group_by(cyl)%>%
summarise(avg_hp = mean(hp))%>%
arrange(desc(avg_hp))
mtcars%>%
group_by(cyl)%>%
summarise(avg_hp = mean(hp))%>%
arrange(desc(avg_hp))
mtcars%>%
group_by(cyl)%>%
summarise(avg_hp = funs(mean(hp)))%>%
arrange(desc(avg_hp))
mtcars%>%
group_by(cyl)%>%
summarise(avg_hp = funs(mean(hp)))%>%
arrange(desc(avg_hp))
mtcars%>%
group_by(cyl)%>%
summarise_each(avg_hp = funs(mean(hp)))%>%
arrange(desc(avg_hp))
mtcars
mtcars%>%
group_by(cyl)%>%
summarise_each(funs(mean),hp,disp)%>%
arrange(desc(avg_hp))%
mtcars%>%
group_by(cyl)%>%
summarise_each(funs(mean),hp,disp)%>%
mtcars%>%
group_by(cyl)%>%
summarise_each(funs(mean),hp,disp)%>%
mtcars%>%
group_by(cyl)%>%
summarise_each(funs(mean),hp,disp)
mtcars%>%
group_by(cyl)%>%
summarise_each(funs(mean),hp,disp)
mtcars%>%
group_by(cyl)%>%
summarise_each(funs(mean),hp,disp)%>%
mtcars%>%
group_by(cyl)%>%
summarise_each(funs(mean,n()),hp,disp)
mtcars%>%
group_by(cyl)%>%
summarise_each(funs(mean,n()),hp,disp)
mtcars%>%
group_by(cyl)%>%
summarise_each(funs(mean),hp,disp)%>%
mtcars%>%
group_by(cyl)%>%
summarise_each(funs(mean),hp,disp)
mtcars%>%
group_by(cyl)%>%
summarise_each(funs(mean),hp,disp)
mtcars%>%
group_by(cyl)%>%
summarise_each(list(mean),hp,disp)
mtcars%>%
group_by(cyl)%>%
summarise_each(funs(mean,n()),hp,disp)
iris
iris.image
iris%>%
filter(Species)
iris%>%
filter(Species)
iris%>%
filter(iris,Species)
#품종별 4가지 평균
iris%>%
filter(iris,Species)
#품종별 4가지 평균
iris%>%
select(iris,Species)
#품종별 4가지 평균
iris%>%
group_by(Species)%>%
iris%>%
group_by(Species)%>%
#품종별 4가지 평균
iris%>%
group_by(Species)%>%
summarise(평균 = mean)
iris%>%
group_by(Species)%>%
summarise(평균 = mean)
#품종별 4가지 평균
iris%>%
group_by(Species)%>%
summarise(mean)
iris%>%
group_by(Species)%>%
summarise(mean())
#품종별 4가지 평균
iris%>%
group_by(Species)%>%
mean(iris)
iris%>%
group_by(Species)%>%
mean(iris)
#품종별 4가지 평균
iris%>%
group_by(Species)
#품종별 4가지 평균
iris%>%
group_by(Species)%>%
summarise_each(funs(mean))
iris%>%
group_by(Species)%>%
summarise_each(list(mean),Sepal.Length, Sepal.Width, Petal.Length, Petal.Width)
